openapi: 3.0.0
info:
  title: PaySecure Gateway API
  version: 1.0.0
  description: Secure payment gateway backend API

servers:
  - url: http://localhost:3000/api

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id: { type: integer }
        name: { type: string }
        email: { type: string }
        created_at: { type: string, format: date-time }
    PaymentMethod:
      type: object
      properties:
        id: { type: integer }
        type: { type: string }
        details: { type: string }
        is_active: { type: boolean }
        created_at: { type: string, format: date-time }
    Transaction:
      type: object
      properties:
        id: { type: integer }
        amount: { type: number }
        status: { type: string }
        description: { type: string }
        created_at: { type: string, format: date-time }

security:
  - bearerAuth: []

paths:
  /users/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name: { type: string }
                email: { type: string }
                password: { type: string }
      responses:
        '201':
          description: User registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: { type: string }
                  user: { $ref: '#/components/schemas/User' }

  /users/login:
    post:
      summary: Login and get JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email: { type: string }
                password: { type: string }
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: { type: string }
                  token: { type: string }
                  user: { $ref: '#/components/schemas/User' }

  /users/profile:
    get:
      summary: Get user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: { type: string }
                  user: { $ref: '#/components/schemas/User' }

  /payments/add:
    post:
      summary: Add a payment method
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type: { type: string, enum: [card, upi] }
                details: { type: string }
      responses:
        '201':
          description: Payment method added
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: { type: string }
                  paymentMethod: { $ref: '#/components/schemas/PaymentMethod' }

  /payments/list:
    get:
      summary: List payment methods
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of payment methods
          content:
            application/json:
              schema:
                type: object
                properties:
                  paymentMethods:
                    type: array
                    items: { $ref: '#/components/schemas/PaymentMethod' }

  /payments/remove/{id}:
    delete:
      summary: Remove a payment method
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Payment method removed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: { type: string }

  /payments/pay:
    post:
      summary: Initiate a payment
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                paymentMethodId: { type: integer }
                amount: { type: number }
                description: { type: string }
      responses:
        '201':
          description: Payment processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: { type: string }
                  transaction: { $ref: '#/components/schemas/Transaction' }

  /payments/history:
    get:
      summary: Get transaction history
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of transactions
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactions:
                    type: array
                    items: { $ref: '#/components/schemas/Transaction' }

  /payments/refund/{transactionId}:
    post:
      summary: Refund a payment
      security:
        - bearerAuth: []
      parameters:
        - name: transactionId
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Refund processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: { type: string }
                  transactionId: { type: integer }

  /admin/users:
    get:
      summary: Get all users (admin only)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items: { $ref: '#/components/schemas/User' }

  /admin/stats:
    get:
      summary: Get system stats (admin only)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: System stats
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalPayments: { type: integer }
                  totalAmountProcessed: { type: number }
                  totalFailed: { type: integer }
                  totalUsers: { type: integer }
                  topUsers:
                    type: array
                    items:
                      type: object
                      properties:
                        user_id: { type: integer }
                        tx_count: { type: integer }
